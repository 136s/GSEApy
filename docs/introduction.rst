

Welcome to GSEAPY's documentation!
=====================================================

GSEAPY: Gene Set Enrichment Analysis in Python.
------------------------------------------------

.. image:: https://badge.fury.io/py/gseapy.svg
    :target: https://badge.fury.io/py/gseapy

.. image:: https://img.shields.io/badge/install%20with-bioconda-brightgreen.svg?style=flat-square
    :target: http://bioconda.github.io

.. image:: https://travis-ci.org/BioNinja/gseapy.svg?branch=master
    :target: https://travis-ci.org/BioNinja/gseapy

.. image:: http://readthedocs.org/projects/gseapy/badge/?version=latest
    :target: http://gseapy.readthedocs.org/en/latest/?badge=latest
    :alt: Documentation Status

.. image:: https://img.shields.io/badge/license-MIT-blue.svg
    :target:  https://img.shields.io/badge/license-MIT-blue.svg
.. image:: https://img.shields.io/badge/python-3.5-blue.svg
    :target:   https://img.shields.io/badge/python-3.5-blue.svg
.. image:: https://img.shields.io/badge/python-2.7-blue.svg
    :target:  https://img.shields.io/badge/python-2.7-blue.svg



GSEAPY is a python wrapper for **GESA** and **Enrichr**. 
--------------------------------------------------------------------------------------------

It's used for convenient GO enrichments and produce **publishable quality figures** from python. 

GSEAPY could be used for **RNA-seq, ChIP-seq, Microarry** data.



`Gene Set Enrichment Analysis <http://software.broadinstitute.org/gsea/index.jsp>`_ (GSEA) 
is a computational method that determines whether an a priori defined set of genes shows 
statistically significant, concordant differences between two biological states (e.g. phenotypes). 

The full ``GSEA`` is far too extensive to describe here; see
`GSEA  <http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page>`_ documentation for more information.

Enrichr is open source and freely available online at: http://amp.pharm.mssm.edu/Enrichr .



Why GSEAPY
-----------------------------------------------------

I would like to use Pandas to explore my data, but I did not find a  convenient tool to
do gene set enrichment analysis in python. So, here is my reason: 

* **Running inside python console without switch to R!!!**
* User friendly for both wet and dry lab usrers.
* Produce pubilishable figures.
* Perform batch jobs easy.
* Easy to use in Bash shell. 


GSEA desktop version output
-------------------------------------------------
This is an example of GSEA desktop application output

.. figure:: GSEA_OCT4_KD.png

   Generated by ``GSEA`` 
   

GSEAPY ``Prerank`` module output
-----------------------------------------------
Using the same data from ``GSEA``, GSEAPY reproduce the example above.

Using ``replot`` module will reproduce the same figure for GSEA Java desktop outputs

.. figure:: gseapy_OCT4_KD.png

   
   
   Generated by GSEAPY
   
   **GSEAPY figures are PDF formats by default.** Other matplotlib figures formats are supported, too.

   You can modify ``GSEA`` plots easily in .pdf files. Please Enjoy.


GSEAPY ``enrichr`` module 
-----------------------------------------------
The powerfull module will enable you perform gene set enrichment analysis extreamly easily.

.. figure:: enrichr.PNG



Installation
----------------

| Install gseapy package from pypi and download 

.. code:: bash

   $ pip install gseapy

| You may instead want to use the development version from Github, by running

.. code:: bash

   $ pip install git+git://github.com/BioNinja/gseapy.git#egg=gseapy


Dependency
--------------
* Python 2.7 or 3.3+


Mandatory
~~~~~~~~~~~~~~~~

* Numpy 
* Pandas 
* Matplotlib
* Beautifulsoup4
* Requests(for enrichr API)

You may also need **lxml, html5lib**, if you could not parse xml files. 


   
Run GSEAPY
-----------------

GSEAPY has three subcommands: ``replot``, ``call``, ``prerank``,  ``enrichr``.

The ``replot`` module reproduce GSEA desktop version results. The only input for GSEAPY is the location to GSEA results.

The ``call`` module produce GSEAPY results. The input requries a txt file(FPKM, Expected Counts, TPM, et.al), a cls file,
and gene_sets file in gmt format. 

The ``prerank`` module produce GSEAPY results. The input a pre-ranked gene list dataset with correlation values, which in .rnk format,
and gene_sets file in gmt format.  ``prerank`` module is an API to `GSEA` pre-rank tools.All input files' formats are identical to ``GSEA`` desktop version. 


The ``enrichr`` module will using enrichr online tool. It will generate results in txt format.



For more information to use this library,see the :ref:`run`. 