

Welcome to GSEAPY's documentation!
=====================================================

GSEAPY: Gene Set Enrichment Analysis in Python.

.. image:: https://badge.fury.io/py/gseapy.svg
    :target: https://badge.fury.io/py/gseapy
.. image:: https://travis-ci.org/BioNinja/gseapy.svg?branch=master
    :target: https://travis-ci.org/BioNinja/gseapy

.. image:: https://img.shields.io/github/license/mashape/apistatus.svg



GSEAPY is a python wrapper for **GESA**.It's used for convenient GO enrichments
and produce **publishable quality figures** from python. GSEAPY could be used for **RNA-seq, ChIP-seq, Microarry** data.


`Gene Set Enrichment Analysis <http://software.broadinstitute.org/gsea/index.jsp>`_ (GSEA) 
is a computational method that determines whether an a priori defined set of genes shows 
statistically significant, concordant differences between two biological states (e.g. phenotypes). 

The full ``GSEA`` is far too extensive to describe here; see
`GSEA  <http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page>`_ documentation for more information.

Why GSEAPY
-----------------------------------------------------

For Gene Enrichment Analysis, ``GSEA`` is still the one of best choice.  

However, When you have large number of expression tables, or ``GO`` terms to enrich, ``GSEA`` desktop
version is inconvinient. What's more, the R version of GSEA has not been updated since 2006. 
What's worse, ``GSEA`` desktop version do not provide means to modify plots, 
like legends, ticks......

As a researcher of life science, I want a modern ``GSEA`` with lastest features. It can produce pubilishable 
figures, and do many jobs at the same time without using mouse to select differrent data table,
differrent gene sets repeatly. 





Features of GSEAPY
------------------------------------------------------

#. GSEAPY could reproduce the GSEA figures using GSEA desktop version results.

#. GSEAPY could be used directly to perform enrichment anlysis. All parameters are same with ``GSEA``

#. GSEAPY is written in ``python``, using the same algorithm of ``GSEA`` Desktop version.

#. GSEAPY produce figures in pdf format by default, which are ready for publishing and easy to modifiy.

#. GSEAPY is build based on Numpy, it runs very **fast**. 

#. GSEAPY Enhancement will be considered. If you would like to contribute, please @BioNinja on ``Github``.



GSEA desktop version output
-------------------------------------------------
This is an example of GSEA desktop application output

.. figure:: GSEA_OCT4_KD.png

   Generated by ``GSEA`` 
   

GSEAPY ``replot`` module output
-----------------------------------------------
Using the same algorithm by ``GSEA``, GSEAPY reproduce the example above.

.. figure:: gseapy_OCT4_KD.png

   
   
   Generated by GSEAPY
   
   **GSEAPY figures are PDF formats by default.** Other matplotlib figures formats are supported, too.

   You can modify ``GSEA`` plots easily in .pdf files. Please Enjoy.





Installation
----------------

| Install gseapy package from pypi and download 

.. code:: bash

   $ pip install gseapy

| You may instead want to use the development version from Github, by running

.. code:: bash

   $ pip install git+git://github.com/BioNinja/gseapy.git#egg=gseapy


Dependency
--------------
* Python 2.7 or 3.3+


Mandatory
~~~~~~~~~~~~~~~~

* Numpy 
* Pandas 
* Matplotlib
* Beautifulsoup4

You may also need **lxml, html5lib**, if you could not parse xml files. 


   
Run GSEAPY
-----------------

GSEAPY has three subcommands: ``replot``, ``call``, ``prerank``.

The ``replot`` module reproduce GSEA desktop version results. The only input for GSEAPY is the location to GSEA results.

The ``call`` module produce GSEAPY results. The input requries a txt file(FPKM, Expected Counts, TPM, et.al), a cls file,
and gene_sets file in gmt format. 

The ``prerank`` module produce GSEAPY results. The input a pre-ranked gene list dataset with correlation values, which in .rnk format,
and gene_sets file in gmt format.  ``prerank`` module is an API to `GSEA` pre-rank tools.

All input files' formats are identical to ``GSEA`` desktop version. 


For more information to use this library,see the :ref:`run`. 