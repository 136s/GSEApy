Metadata-Version: 1.1
Name: gseapy
Version: 0.4.2
Summary: Gene Set Enrichment Analysis in Python
Home-page: https://github.com/BioNinja/gseapy
Author: Zhuoqing Fang
Author-email: fangzhuoqing@sibs.ac.cn
License: MIT
Download-URL: https://github.com/BioNinja/gseapy
Description: 
        GSEAPY
        ========
        
        GSEAPY: Gene Set Enrichment Analysis in Python.
        
        .. image:: https://badge.fury.io/py/gseapy.svg
            :target: https://badge.fury.io/py/gseapy
        
        .. image:: https://travis-ci.org/BioNinja/gseapy.svg?branch=master
            :target: https://travis-ci.org/BioNinja/gseapy
        
        .. image:: http://readthedocs.org/projects/gseapy/badge/?version=latest
            :target: http://gseapy.readthedocs.org/en/latest/?badge=latest
            :alt: Documentation Status
        
        
        .. image:: https://img.shields.io/github/license/mashape/apistatus.svg
        
        
        
        
        
        .. note::
          
          The main documentation for GSEAPY can be found at https://pythonhosted.org/gseapy
          
        
        GSEAPY is a python wrapper for **GESA**.It's used for convenient GO enrichments
        and produce **publishable quality figures** from python. GSEAPY could be used for **RNA-seq, ChIP-seq, Microarry** data.
        
        
        
        `Gene Set Enrichment Analysis <http://software.broadinstitute.org/gsea/index.jsp>`_ (GSEA) 
        is a computational method that determines whether an a priori defined set of genes shows 
        statistically significant, concordant differences between two biological states (e.g. phenotypes). 
        
        The full ``GSEA`` is far too extensive to describe here; see
        `GSEA  <http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page>`_ documentation for more information.
        
        
        Why GSEAPY
        -----------------------------------------------------
        
        For Gene Enrichment Analysis, ``GSEA`` is still the one of best choice.  
        
        However, When you have large number of expression tables, or ``GO`` terms to enrich, ``GSEA`` desktop
        version is inconvinient. What's more, the R version of GSEA has not been updated since 2006. 
        What's worse, ``GSEA`` desktop version do not provide means to modify plots, 
        like legends, ticks......
        
        As a researcher of life science, I want a modern ``GSEA`` with lastest features. It can produce pubilishable 
        figures, and do many jobs at the same time without using mouse to select differrent data table,
        differrent gene sets repeatly. 
        
        
        
        
        
        Features of GSEAPY
        ------------------------------------------------------
        
        #. GSEAPY could reproduce the GSEA figures using GSEA desktop version results.
        
        #. GSEAPY could be used directly to perform enrichment anlysis. All parameters are same with ``GSEA``
        
        #. GSEAPY is written in ``python``, using the same algorithm of ``GSEA`` Desktop version.
        
        #. GSEAPY produce figures in pdf format by default, which are ready for publishing and easy to modifiy.
        
        #. GSEAPY Enhancement will be considered. If you would like to contribute, please @BioNinja on ``Github``. 
        
        
        
        GSEA desktop version output: 
        -------------------------------------------------
        This is an example of GSEA desktop application output
        
        .. figure:: GSEA_OCT4_KD.png
        
        
        
        
        GSEAPY ``replot`` module output
        -----------------------------------------------
        Using the same algorithm by ``GSEA``, GSEAPY reproduce the example above.
        
        .. figure:: gseapy_OCT4_KD.png
        
           
           
           Generated by GSEAPY
           
           **GSEAPY figures are PDF formats by default.** Other matplotlib figures formats are supported, too.
        
           You can modify ``GSEA`` plots easily in .pdf files. Please Enjoy.
        
        
        
        Installation
        ------------
        
        | Install gseapy package from pypi and download 
        
        .. code:: shell
        
           $ pip install gseapy
        
        | You may instead want to use the development version from Github, by running
        
        .. code:: shell
        
           $ pip install git+git://github.com/BioNinja/gseapy.git#egg=gseapy
        
        Dependency
        --------------
        * Python 2.7 or 3.3+
        
        Mandatory
        ~~~~~~~~~
        
        * Numpy 
        * Pandas 
        * Matplotlib
        * Beautifulsoup4
        
        You may also need **lxml, html5lib**, if you could not parse xml files. 
        
        
           
        Run GSEAPY
        -----------------
        
        GSEAPY has three subcommands: ``replot``, ``call``, ``prerank``.
        
        The ``replot`` module reproduce GSEA desktop version results. The only input for GSEAPY is the location to GSEA results.
        
        The ``call`` module produce GSEAPY results. The input requries a txt file(FPKM, Expected Counts, TPM, et.al), a cls file,
        and gene_sets file in gmt format. 
        
        The ``prerank`` module produce GSEAPY results. The input expects a pre-ranked gene list dataset with correlation values, which in .rnk format,
        and gene_sets file in gmt format.  ``prerank`` module is an API to `GSEA` pre-rank tools.
        
        All input files' formats are identical to ``GSEA`` desktop version. 
        See `GSEA  <http://www.broadinstitute.org/cancer/software/gsea/wiki/index.php/Main_Page>`_ documentation for more information.
        
        
        For command line usage:
        ~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: bash
          
          $ gseapy replot -i path/to/GSEA_resutls_folder -o gesapy_out
        
          # An example to reproduce figures using replot module.
          $ gseapy replot -i ./Gsea.reports -o test
          
          
          # An example to compute using gseapy call module
          $ gseapy call -d exptable.txt -c test.cls -g gene_sets.gmt -o test
        
          # An example to compute using gseapy prerank module
          $ gseapy prerank -r gsea_data.rnk -g gene_sets.gmt -o test
        
        
        
        
        Run gseapy inside python:
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: python
          
            import gseapy
            # An example to reproduce figures using replot module.
            gseapy.replot(indir='./Gsea.reports',outdir='test')
        
            # calculate es, nes, pval,fdrs, and produce figures using gseapy.
            gseapy.call(data=expression.txt, gene_sets=gene_sets.gmt, cls=test.cls, outdir='test')
           
            # using prerank tool
            gseapy.prerank(rnk=gsea_data.rnk, gene_sets=gene_sets.gmt, outdir='test')
        
        
        
        To get help of GSEAPY
        -----------------------------------------
        To see gseapy subcommands
        
        .. code:: bash
           
           $ gseapy --help 
           
            usage: gseapy [-h] [--version] {call,prerank,replot} ...
        
            gseapy -- Gene Set Enrichment Analysis in Python
        
            positional arguments:
              {call,prerank,replot}
                call       Main GSEAPY Function: run GSEAPY instead of GSEA.
                prerank    Using pre-ranked tool to run GSEAPY.
                replot     Reproduce GSEA desktop figures.
        
            optional arguments:
              -h, --help   show this help message and exit
              --version    show program's version number and exit
        
        
        
        
        For command line options of each command, type: gseapy COMMAND -h
        
        
        The ``replot`` Command
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: bash
        
           $ gseapy replot -h
        
           usage: gseapy replot [-h] -i [-o] [-f] [--figsize width height] [-w]
        
            optional arguments:
              -h, --help            show this help message and exit
        
            Positional arguments:
              -i , --indir          The GSEA desktop results directroy that you want to
                                    reproduce the figure
              -o , --outdir         The gseapy output directory. Default: the current
                                    working directory
              -f , --format         Format of output figures, choose from {'pdf', 'png',
                                    'jpeg', 'eps'}. Default: 'pdf'.
              --figsize width height
                                    The figsize keyword argument need two parameter to
                                    define. Default: [6.5, 6]
              -w , --weight         Weighted_score of rank_metric. Please use the same 
                                    value in GSEA. Choose from (0, 1, 1.5, 2),default: 1
        
        
        
        The ``call`` Command
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: bash
        
           $ gseapy call -h
        
            usage: gseapy call  [-h] -i DATA -c CLS -g GMT [-p] [-o] [-f]
                                [--figsize width height] [--min-size] [--max-size] [-n]
                                [-w] [-m] [-a] [-s]
            
            optional arguments:
              -h, --help            show this help message and exit
                
            Input files arguments:
              -d DATA, --data DATA
                                    Input gene expression Affymetrix dataset file in txt
                                    format.Same with GSEA.
              -c CLS, --cls CLS     Input class vector (phenotype) file in CLS format.
                                    Same with GSEA.
              -g GMT, --gmt GMT     Gene set database in GMT format. Same with GSEA.
              -p , --permu-type     Permutation type. Same with GSEA, choose from
                                    {'gene_set', 'phenotype'}
            
            Output arguments:
              -o , --outdir         The GSEAPY output directory. Default: the current
                                    working directory
              -f , --format         Format of output figures, choose from {'pdf', 'png',
                                    'jpeg', 'eps'}. Default: 'pdf'.
              --figsize width height
                                    The figsize keyword argument need two parameter to
                                    define. Default: [6.5,6]
            
            GSEA advanced arguments:
              --min-size            Min size of input genes presented in Gene Sets.
                                    Default: 15
              --max-size            Max size of input genes presented in Gene Sets.
                                    Default: 1000
              -n , --permu-num      Number of random permutations. For calculating
                                    esnulls. Default: 1000
              -w , --weight         Weighted_score of rank_metrics.For weighting input
                                    genes. Choose from {0, 1, 1.5, 2},default: 1
              -m , --method         Methods to calculate correlations of ranking metrics.
                                    Choose from {'signal_to_noise', 't_test',
                                    'ratio_of_classes',
                                    'diff_of_classes','log2_ratio_of_classes'}. Default:
                                    'log2_ratio_of_classes'
              -a , --ascending      Rank metric sorting order. If the -a flag was chosen,
                                    then ascending equals to True. Default: False.
              -t , --top-graph      Plot graphs for top sets of each phenotype. Default:
                                    20
              -s , --seed           Number of random seed. Default: None   
        
        
        The ``prerank`` Command
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: bash
           
          $ gseapy prerank -h
            
            usage: gseapy prerank       [-h] -r RNK -g GMT [-l pos neg] [-o] [-f]
                                        [--figsize width height] [--min-size]
                                        [--max-size] [-n] [-w] [-a] [-s]
        
            optional arguments:
              -h, --help            show this help message and exit
            
            Input files arguments:
              -r RNK, --rnk RNK     ranking dataset file in .rnk format.Same with GSEA.
              -g GMT, --gmt GMT     Gene set database in GMT format. Same with GSEA.
              -l pos neg, --label pos neg
                                    The phenotype label argument need two parameter to
                                    define. Default: ['Postive','Negative']
            
            Output arguments:
              -o , --outdir         The GSEAPY output directory. Default: the current
                                    working directory
              -f , --format         Format of output figures, choose from {'pdf', 'png',
                                    'jpeg', 'eps'}. Default: 'pdf'.
              --figsize width height
                                    The figsize keyword argument need two parameter to
                                    define. Default: [6.5,6]
            
            GSEA advanced arguments:
              --min-size            Min size of input genes presented in Gene Sets.
                                    Default: 15
              --max-size            Max size of input genes presented in Gene Sets.
                                    Default: 1000
              -n , --permu-num      Number of random permutations. For calculating
                                    esnulls. Default: 1000
              -w , --weight         Weighted_score of rank_metrics.For weighting input
                                    genes. Choose from {0, 1, 1.5, 2},default: 1
              -a , --ascending      Rank metric sorting order. If the -a flag was chosen,
                                    then ascending equals to True. Default: False.
              -t , --top-graph      Plot graphs for top sets of each phenotype. Default:
                                    20
              -s , --seed           Number of random seed. Default: None
            
           
        
Keywords: GO,Gene Ontology,Biology,Enrichment,Bioinformatics,Computational Biology
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 2.7
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Topic :: Software Development :: Libraries
